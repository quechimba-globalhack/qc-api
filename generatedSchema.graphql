# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Auction {
  actn_id: Float!
  bkn: String!
  created_at: DateTime!
  duration: Float!
  exp_id: Float!
  highest_bid: Float
  req_cancel: Float!
  start_date: DateTime!
  start_value: Float
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type EosioError {
  code: String!
  message: String!
  name: String!
}

input EosioTransactionData {
  hexData: String!
  name: ID!
  signatures: [String!]!
}

type Experience {
  actn: Auction
  base_val: Float
  bkn_id: String!
  content: String!
  engagement: Float!
  exp_id: Float!
  maxactntdate: DateTime!
  places: Float!
  pub_price: Float
  sealed: Float!
  start_date: String!
}

type Lukas {
  balance: Float
}

type Mutation {
  sendTransaction(data: EosioTransactionData!, user: String!): RpcProcessedResponse!
}

type QueChimba {
  quechimba: String!
}

type Query {
  getBalace(user: String!): Lukas!
  getExperience(expid: Int!): Experience!
  queChimba(count: Int!): [QueChimba!]!
}

type RpcProcessedResponse {
  blockNumber: Float
  error: EosioError
  hash: String!
  timestamp: DateTime!
}
